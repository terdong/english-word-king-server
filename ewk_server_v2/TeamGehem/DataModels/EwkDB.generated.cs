//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/t4models).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace EWK_Server.TeamGehem.DataModels
{
	/// <summary>
	/// Database       : ewk
	/// Data Source    : localhost
	/// Server Version : 9.4.0
	/// </summary>
	public partial class ewkDB : LinqToDB.Data.DataConnection
	{
		public ITable<account>                accounts               { get { return this.GetTable<account>(); } }
		public ITable<account_avatar>         account_avatar         { get { return this.GetTable<account_avatar>(); } }
		public ITable<account_info>           account_info           { get { return this.GetTable<account_info>(); } }
		public ITable<account_item>           account_item           { get { return this.GetTable<account_item>(); } }
		public ITable<account_record_history> account_record_history { get { return this.GetTable<account_record_history>(); } }
		public ITable<account_word>           account_word           { get { return this.GetTable<account_word>(); } }
		public ITable<avatar>                 avatars                { get { return this.GetTable<avatar>(); } }
		public ITable<item>                   items                  { get { return this.GetTable<item>(); } }

		public ewkDB()
		{
			InitDataContext();
		}

		public ewkDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
		}

		partial void InitDataContext();
	}

	[Table(Schema="public", Name="account")]
	public partial class account
	{
		[PrimaryKey, Identity   ] public int             uid              { get; set; } // integer
		[Column,     NotNull    ] public string          email            { get; set; } // character varying
		[Column,        Nullable] public DateTimeOffset? last_signed_date { get; set; } // timestamp (6) with time zone

		#region Associations

		/// <summary>
		/// account_avatar_uid_fkey_BackReference
		/// </summary>
		[Association(ThisKey="uid", OtherKey="uid", CanBeNull=true)]
		public IEnumerable<account_avatar> avataruidfkeys { get; set; }

		/// <summary>
		/// account_info_uid_fkey_BackReference
		/// </summary>
		[Association(ThisKey="uid", OtherKey="uid", CanBeNull=true)]
		public IEnumerable<account_info> infouidfkeys { get; set; }

		/// <summary>
		/// account_item_uid_fkey_BackReference
		/// </summary>
		[Association(ThisKey="uid", OtherKey="uid", CanBeNull=true)]
		public IEnumerable<account_item> itemuidfkeys { get; set; }

		/// <summary>
		/// account_record_history_uid_fkey_BackReference
		/// </summary>
		[Association(ThisKey="uid", OtherKey="uid", CanBeNull=true)]
		public IEnumerable<account_record_history> recordhistoryuidfkeys { get; set; }

		/// <summary>
		/// account_word_uid_fkey_BackReference
		/// </summary>
		[Association(ThisKey="uid", OtherKey="uid", CanBeNull=true)]
		public IEnumerable<account_word> worduidfkeys { get; set; }

		#endregion
	}

	[Table(Schema="public", Name="account_avatar")]
	public partial class account_avatar
	{
		[Column, Nullable] public int?   uid          { get; set; } // integer
		[Column, Nullable] public int?   auid         { get; set; } // integer
		[Column, Nullable] public int?   avatar_level { get; set; } // integer
		[Column, Nullable] public int?   avatar_exp   { get; set; } // integer
		[Column, Nullable] public object keep_list    { get; set; } // json

		#region Associations

		/// <summary>
		/// account_avatar_auid_fkey
		/// </summary>
		[Association(ThisKey="auid", OtherKey="uid", CanBeNull=true)]
		public avatar accountavatarauidfkey { get; set; }

		/// <summary>
		/// account_avatar_uid_fkey
		/// </summary>
		[Association(ThisKey="uid", OtherKey="uid", CanBeNull=true)]
		public account accountavataruidfkey { get; set; }

		#endregion
	}

	[Table(Schema="public", Name="account_info")]
	public partial class account_info
	{
		[Column, Nullable] public int?            uid                  { get; set; } // integer
		[Column, Nullable] public DateTimeOffset? first_signed_date    { get; set; } // timestamp (6) with time zone
		[Column, Nullable] public string          nick_name            { get; set; } // character varying(20)
		[Column, Nullable] public int?            cash                 { get; set; } // integer
		[Column, Nullable] public int?            money                { get; set; } // integer
		[Column, Nullable] public int?            word_count           { get; set; } // integer
		[Column, Nullable] public int?            word_deck_count      { get; set; } // integer
		[Column, Nullable] public int?            word_reference_count { get; set; } // integer
		[Column, Nullable] public int?            rank_point           { get; set; } // integer
		[Column, Nullable] public int?            rank_win_count       { get; set; } // integer
		[Column, Nullable] public int?            rank_lose_count      { get; set; } // integer
		[Column, Nullable] public int?            rank_draw_count      { get; set; } // integer
		[Column, Nullable] public int?            attendance_count     { get; set; } // integer

		#region Associations

		/// <summary>
		/// account_info_uid_fkey
		/// </summary>
		[Association(ThisKey="uid", OtherKey="uid", CanBeNull=true)]
		public account accountinfouidfkey { get; set; }

		#endregion
	}

	[Table(Schema="public", Name="account_item")]
	public partial class account_item
	{
		[Column, Nullable] public int?   uid       { get; set; } // integer
		[Column, Nullable] public object keep_list { get; set; } // json
		[Column, Nullable] public object buff_list { get; set; } // json

		#region Associations

		/// <summary>
		/// account_item_uid_fkey
		/// </summary>
		[Association(ThisKey="uid", OtherKey="uid", CanBeNull=true)]
		public account accountitemuidfkey { get; set; }

		#endregion
	}

	[Table(Schema="public", Name="account_record_history")]
	public partial class account_record_history
	{
		[Column, Nullable] public int?   uid               { get; set; } // integer
		[Column, Nullable] public object total_record      { get; set; } // json
		[Column, Nullable] public int?   max_victory_count { get; set; } // integer

		#region Associations

		/// <summary>
		/// account_record_history_uid_fkey
		/// </summary>
		[Association(ThisKey="uid", OtherKey="uid", CanBeNull=true)]
		public account accountrecordhistoryuidfkey { get; set; }

		#endregion
	}

	[Table(Schema="public", Name="account_word")]
	public partial class account_word
	{
		[Column, Nullable] public int?   uid             { get; set; } // integer
		[Column, Nullable] public object registered_word { get; set; } // json
		[Column, Nullable] public object referenced_word { get; set; } // json

		#region Associations

		/// <summary>
		/// account_word_uid_fkey
		/// </summary>
		[Association(ThisKey="uid", OtherKey="uid", CanBeNull=true)]
		public account accountworduidfkey { get; set; }

		#endregion
	}

	[Table(Schema="public", Name="avatar")]
	public partial class avatar
	{
		[PrimaryKey, Identity] public int    uid         { get; set; } // integer
		[Column,     Nullable] public string name        { get; set; } // character varying(30)
		[Column,     Nullable] public string description { get; set; } // character varying(300)
		[Column,     Nullable] public int?   price       { get; set; } // integer

		#region Associations

		/// <summary>
		/// account_avatar_auid_fkey_BackReference
		/// </summary>
		[Association(ThisKey="uid", OtherKey="auid", CanBeNull=true)]
		public IEnumerable<account_avatar> accountauidfkeys { get; set; }

		#endregion
	}

	[Table(Schema="public", Name="item")]
	public partial class item
	{
		[PrimaryKey, Identity] public int    uid         { get; set; } // integer
		[Column,     Nullable] public string name        { get; set; } // character varying(30)
		[Column,     Nullable] public string description { get; set; } // character varying(300)
		[Column,     Nullable] public int?   price       { get; set; } // integer
	}

	public static partial class TableExtensions
	{
		public static account Find(this ITable<account> table, int uid)
		{
			return table.FirstOrDefault(t =>
				t.uid == uid);
		}

		public static avatar Find(this ITable<avatar> table, int uid)
		{
			return table.FirstOrDefault(t =>
				t.uid == uid);
		}

		public static item Find(this ITable<item> table, int uid)
		{
			return table.FirstOrDefault(t =>
				t.uid == uid);
		}
	}
}
